package VIEW;

import DAO.UsuarioDAO;
import DTO.UsuarioDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.sql.SQLException;

public class frmPesquisaUsuario extends javax.swing.JFrame {

    //inicializador da classe, QUANDO ARBRIR A TELA O QUE ACONTECERÁ
    public frmPesquisaUsuario() {
        initComponents();

        listarValoresUsuario();//método 

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUsuario = new javax.swing.JTable();
        btnCarregarCampos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomeTable = new javax.swing.JTextField();
        txtSenhaTable = new javax.swing.JTextField();
        txtEmailTable = new javax.swing.JTextField();
        txtTelefoneTable = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIdTable = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnAlterar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "EMAIL", "TELEFONE", "SENHA"
            }
        ));
        jScrollPane1.setViewportView(tabelaUsuario);
        tabelaUsuario.getAccessibleContext().setAccessibleDescription("");

        btnCarregarCampos.setText("CARREGAR CAMPOS");
        btnCarregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarCamposActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Tabela de informações do Usuário");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("NOME");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("EMAIL");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("TELEFONE");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("SENHA");

        txtNomeTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtSenhaTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtEmailTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtTelefoneTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("ID:");

        txtIdTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtIdTable.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jLabel7.setText("Selecione o campo que deseja carregar na tabela");

        btnAlterar.setText("ALTERAR INFORMAÇÕES");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomeTable)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(2, 2, 2)
                                .addComponent(txtIdTable, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(txtEmailTable, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSenhaTable)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtTelefoneTable)))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(292, 395, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCarregarCampos)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtIdTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSenhaTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefoneTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarregarCampos)
                    .addComponent(btnSair))
                .addGap(1, 1, 1)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void btnCarregarCamposActionPerformed(java.awt.event.ActionEvent evt) {                                                  

        CarregarCampos();//método interno
         listarValoresUsuario();//método 

    }                                                 

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {                                           
  
        //comparando se os campos estão vazios
              if(txtIdTable.getText().equals("") ||
                      txtNomeTable.getText().equals("") ||
                      txtEmailTable.getText().equals("") ||
                      txtTelefoneTable.getText().equals("") ||
                      txtSenhaTable.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Há algum campo vazio, preencha para atlerar as inforamções");
    }else{
        AlterarUsuario();//altera
        listarValoresUsuario();//carrega no visual da tabela
        LimparCampos();
            }
       
        
        
    }                                          

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {                                          
        
        LimparCampos();
        
    }                                         

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {                                        
        dispose();
    }                                       

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPesquisaUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCarregarCampos;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tabelaUsuario;
    private javax.swing.JTextField txtEmailTable;
    private javax.swing.JTextField txtIdTable;
    private javax.swing.JTextField txtNomeTable;
    private javax.swing.JTextField txtSenhaTable;
    private javax.swing.JTextField txtTelefoneTable;
    // End of variables declaration                   

    private void listarValoresUsuario() {

        try {

            UsuarioDAO objusuariodao = new UsuarioDAO();//instanciando a classe

//montar esse modo de tabela no Array tabelaUsuario
            DefaultTableModel model = (DefaultTableModel) tabelaUsuario.getModel();
            model.setNumRows(0);

//pega as informações da DAO e monta o ArrayList lista
            ArrayList<UsuarioDTO> lista = objusuariodao.PesquisarUsuario();

//estrutura de repetição for (inicia, até onde vai, acrescentando)
            for (int num = 0; num < lista.size(); num++) {

//aqui dentro montar a tabela
//adicionar na linha quantas colunas
                model.addRow(new Object[]{
                    lista.get(num).getId_usuario(),
                    lista.get(num).getNome_usuario(),
                    lista.get(num).getEmail_usuario(),
                    lista.get(num).getTelefone_usuario(),
                    lista.get(num).getSenha_usuario(),
                    lista.get(num).getAdm_usuario()
                });
            }

        } catch (Exception erro) {

            JOptionPane.showMessageDialog(null, "Listar Valores VIEW: " + erro);

        }

    }

    private void CarregarCampos() {

        int setar = tabelaUsuario.getSelectedRow();//serve para designar a linha que será setada, através da seleção feita pelo usuário

//pegar um campo de texto e setando = qual o texto? -> pegar do modelo da tabela, pegando o valor
//o getValue pega qual a linha e qual a coluna
//pega na tabela e seta no campo
        txtIdTable.setText(tabelaUsuario.getModel().getValueAt(setar, 0).toString());
        txtNomeTable.setText(tabelaUsuario.getModel().getValueAt(setar, 1).toString());
        txtEmailTable.setText(tabelaUsuario.getModel().getValueAt(setar, 2).toString());
        txtTelefoneTable.setText(tabelaUsuario.getModel().getValueAt(setar, 3).toString());
        txtSenhaTable.setText(tabelaUsuario.getModel().getValueAt(setar, 4).toString());

    }

    private void AlterarUsuario(){
int id_usuario;
String nome_usuario, email_usuario, telefone_usuario, senha_usuario;

id_usuario = Integer.parseInt(txtIdTable.getText());//o método Integer.parseInt() pega o conteúdo texto e converte para inteiro
nome_usuario = txtNomeTable.getText();
email_usuario = txtEmailTable.getText();
telefone_usuario = txtTelefoneTable.getText();
senha_usuario = txtSenhaTable.getText();

//mesmo que o usuário digite algum valor nos campos TextField, esse valores serão setados na DTO
UsuarioDTO objusuariodto = new UsuarioDTO();
objusuariodto.setId_usuario(id_usuario);
objusuariodto.setNome_usuario(nome_usuario);
objusuariodto.setEmail_usuario(email_usuario);
objusuariodto.setTelefone_usuario(telefone_usuario);
objusuariodto.setSenha_usuario(senha_usuario);

//instanciando a classe DAO
UsuarioDAO objusuariodao = new UsuarioDAO();
objusuariodao.alterarUsuario(objusuariodto);

}
    
    private void LimparCampos(){
        
        txtIdTable.setText("");
        txtNomeTable.setText("");
        txtEmailTable.setText("");
        txtTelefoneTable.setText("");
        txtSenhaTable.setText("");

    }
    
}
